{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","pages","i","push","className","classNames","disabled","href","onClick","map","page","active","items","from","to","numbers","n","getNumbers","App","useState","setCurrentPage","setPerPage","totalItems","length","firstItem","lastItem","id","value","onChange","event","quantity","target","htmlFor","slice","item","ReactDOM","render","document","getElementById"],"mappings":"oNAUaA,EAA6B,SAAC,GASzC,IAJK,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAQ,GAELC,EAAI,EAAGA,GAAKJ,EAAYI,GAAK,EACpCD,EAAME,KAAKD,GAeb,OACE,qBAAIE,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CACrCC,SAA0B,IAAhBV,IADZ,SAIE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBX,EAAoB,OAAS,QAC5CY,QAvBS,WACK,IAAhBZ,GACFC,EAAaD,EAAc,IAgBzB,oBAWDK,EAAMQ,KAAI,SAAAC,GAAI,OACb,oBAEEN,UAAWC,IAAW,YAAa,CACjCM,OAAQf,IAAgBc,IAH5B,SAME,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMX,EAAaa,IAJ9B,SAMGA,KAZL,eACeA,OAgBjB,oBAAIN,UAAWC,IAAW,YAAa,CACrCC,SAAUV,IAAgBE,IAD5B,SAIE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAAeX,IAAgBE,EAAa,OAAS,QACrDU,QAlDS,WACXZ,IAAgBE,GAClBD,EAAaD,EAAc,IA2CzB,wBCpEFgB,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQZ,KAAKa,GAGf,OAAOD,EDDKE,CAAW,EAAG,IACzBR,KAAI,SAAAO,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAAsCC,mBAAiB,GAAvD,mBAAOvB,EAAP,KAAoBwB,EAApB,KACA,EAA8BD,mBAAiB,GAA/C,mBAAOxB,EAAP,KAAgB0B,EAAhB,KAEMC,EAAaV,EAAMW,OAEnBC,EAAY7B,GAAWC,EAAc,GACrC6B,EAAW7B,EAAcD,EAAU2B,EACrCA,EACA1B,EAAcD,EAOlB,OACE,sBAAKS,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiC4B,EAAY,EAD7C,cACoDC,EADpD,eACmEH,EADnE,OAIA,sBAAKlB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRsB,GAAG,kBACHtB,UAAU,eACVuB,MAAOhC,EACPiC,SAAU,SAAAC,GAAK,OApBNC,GAoBqBD,EAAME,OAAOJ,MAnBnDN,EAAWS,QACXV,EAAe,GAFC,IAACU,GAeX,UAOE,wBAAQH,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkB5B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAO4B,EACP3B,QAASA,EACTC,YAAaA,EACbC,aAAc,SAACa,GAAD,OAAkBU,EAAeV,MAGjD,6BACGE,EAAMqB,MAAMT,EAAWC,GAAUhB,KAAI,SAAAyB,GAAI,OACxC,oBAAyB,UAAQ,OAAjC,SACGA,GADH,eAAiBA,aE5D3BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5031cc3c.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\ninterface Prop {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n}\n\nexport const Pagination: React.FC<Prop> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n  const pages = [];\n\n  for (let i = 1; i <= totalPages; i += 1) {\n    pages.push(i);\n  }\n\n  const prevPage = () => {\n    if (currentPage !== 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const nextPage = () => {\n    if (currentPage !== totalPages) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', {\n        disabled: currentPage === 1,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1 ? 'true' : 'false'}\n          onClick={prevPage}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          key={`page-${page}`}\n          className={classNames('page-item', {\n            active: currentPage === page,\n          })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={classNames('page-item', {\n        disabled: currentPage === totalPages,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === totalPages ? 'true' : 'false'}\n          onClick={nextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [perPage, setPerPage] = useState<number>(5);\n\n  const totalItems = items.length;\n\n  const firstItem = perPage * (currentPage - 1);\n  const lastItem = currentPage * perPage > totalItems\n    ? totalItems\n    : currentPage * perPage;\n\n  const onPerPage = (quantity: number) => {\n    setPerPage(quantity);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem + 1} - ${lastItem} of ${totalItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={event => onPerPage(+event.target.value)}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page: number) => setCurrentPage(page)}\n      />\n\n      <ul>\n        {items.slice(firstItem, lastItem).map(item => (\n          <li key={`item-${item}`} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}